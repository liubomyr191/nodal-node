module.exports = (function() {

  "use strict";

  const Nodal = require('nodal');{{? data.for }}
  const {{= data.for.name }} = Nodal.require('{{= data.for.path }}');{{?}}

  class {{= data.name }} extends Nodal.Controller {

    get() {

      {{? data.for }}if (this.this.params.id) {

        app.composer
          .from(this.app.db('main'), {{= data.for.name }})
          .find(this.params.id, (err, model) => {

            if (err) {
              this.badRequest('Resource does not exist');
              return;
            }

            this.render(model);

          });

      } else {

        app.composer
          .from(this.app.db('main'), {{= data.for.name }})
          .where(this.params.query)
          .externalQuery((err, result) => {

            this.render(result);

          });

      }{{??}}this.render();{{?}}

    }

    post() {

      {{? data.for }}new {{= data.for.name }}(this.params.body.data).save(this.app.db('main'), (err, model) => {

          this.render(model);

      });{{??}}super.post();{{?}}

    }

    put() {

      {{? data.for }}app.composer
        .from(this.app.db('main'), {{= data.for.name }})
        .find(this.params.id, (err, model) => {

          if (err) {
            this.badRequest('Resource does not exist');
            return;
          }

          model.read(this.params.body.data);
          model.save(this.app.db('main'), (err, model) => {

            this.render(model);

          });

        });{{??}}super.put();{{?}}

    }

    del() {

      {{? data.for }}app.composer
        .from(this.app.db('main'), {{= data.for.name }})
        .find(this.params.id, (err, model) => {

          if (err) {
            this.badRequest('Resource does not exist');
            return;
          }

          model.destroy(this.app.db('main'), (err, model) => {

            this.render(model);

          });

        });{{??}}super.del();{{?}}

    }

  }

  return {{= data.name }};

})();
